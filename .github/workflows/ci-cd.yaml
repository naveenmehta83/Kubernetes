name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_FRONTEND: ${{ secrets.DOCKER_USERNAME }}/frontend
  IMAGE_API: ${{ secrets.DOCKER_USERNAME }}/api

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push frontend
      run: |
        docker build -t $IMAGE_FRONTEND:latest ./frontend
        docker push $IMAGE_FRONTEND:latest

    - name: Build and push API
      run: |
        docker build -t $IMAGE_API:latest ./api
        docker push $IMAGE_API:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configure Kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/namespace.yaml
        kubectl apply -f k8s/configmap.yaml
        kubectl apply -f k8s/frontend.yaml
        kubectl apply -f k8s/api.yaml

    - name: Verify Deployment
      run: |
        kubectl rollout status deployment/frontend -n prod
        kubectl rollout status deployment/api -n prod

    - name: Notify Success
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: '{"text":"✅ CI/CD Deployment succeeded!"}'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

    - name: Rollback on failure
      if: failure()
      run: |
        echo "❌ Deployment failed. Manual intervention required."
